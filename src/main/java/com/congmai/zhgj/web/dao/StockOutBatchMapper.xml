<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.congmai.zhgj.web.dao.StockOutBatchMapper" >
  <resultMap id="BaseResultMap" type="com.congmai.zhgj.web.model.StockOutBatch" >
    <id column="serialNum" property="serialNum" jdbcType="VARCHAR" />
    <result column="stockOutSerial" property="stockOutSerial" jdbcType="VARCHAR" />
    <result column="stockInSerial" property="stockInSerial" jdbcType="VARCHAR" />
    <result column="stockOutMaterielSerial" property="stockOutMaterielSerial" jdbcType="VARCHAR" />
    <result column="stockInMaterielSerial" property="stockInMaterielSerial" jdbcType="VARCHAR" />
    <result column="stockInBatchSerial" property="stockInBatchSerial" jdbcType="VARCHAR" />
    <result column="outCount" property="outCount" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="delFlg" property="delFlg" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    serialNum, stockOutSerial, stockInSerial, stockOutMaterielSerial, stockInMaterielSerial, stockInBatchSerial,
    outCount, remark, delFlg, creator, createTime, updater, updateTime
  </sql>
  
  <sql id="Base_Column_List_in" ><!--  入库批次字段-->
    serialNum, stockInMaterielSerial, remark, delFlg, creator, createTime,
    updater, updateTime, warehouseSerial, positionSerial, positionName, stockInCount, batchNum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.congmai.zhgj.web.model.StockOutBatchExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stockOutBatch
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from stockOutBatch
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from stockOutBatch
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.congmai.zhgj.web.model.StockOutBatchExample" >
    delete from stockOutBatch
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.congmai.zhgj.web.model.StockOutBatch" >
    insert into stockOutBatch (serialNum, stockOutSerial, stockInSerial, 
      stockOutMaterielSerial, stockInMaterielSerial,stockInBatchSerial, 
      outCount, remark, delFlg, 
      creator, createTime, updater, 
      updateTime)
    values (#{serialNum,jdbcType=VARCHAR}, #{stockOutSerial,jdbcType=VARCHAR}, #{stockInSerial,jdbcType=VARCHAR}, 
      #{stockOutMaterielSerial,jdbcType=VARCHAR}, #{stockInMaterielSerial,jdbcType=VARCHAR}, #{stockInBatchSerial,jdbcType=VARCHAR}, 
      #{outCount,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{delFlg,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.congmai.zhgj.web.model.StockOutBatch" >
    insert into stockOutBatch
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serialNum != null" >
        serialNum,
      </if>
      <if test="stockOutSerial != null" >
        stockOutSerial,
      </if>
      <if test="stockInSerial != null" >
        stockInSerial,
      </if>
      <if test="stockOutMaterielSerial != null" >
        stockOutMaterielSerial,
      </if>
      <if test="stockInMaterielSerial != null" >
        stockInMaterielSerial,
      </if>
      <if test="stockInBatchSerial != null" >
        stockInBatchSerial,
      </if>
      <if test="outCount != null" >
        outCount,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="delFlg != null" >
        delFlg,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serialNum != null" >
        #{serialNum,jdbcType=VARCHAR},
      </if>
      <if test="stockOutSerial != null" >
        #{stockOutSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockInSerial != null" >
        #{stockInSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockOutMaterielSerial != null" >
        #{stockOutMaterielSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockInMaterielSerial != null" >
        #{stockInMaterielSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockInBatchSerial != null" >
        #{stockInBatchSerial,jdbcType=VARCHAR},
      </if>
      <if test="outCount != null" >
        #{outCount,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delFlg != null" >
        #{delFlg,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.congmai.zhgj.web.model.StockOutBatchExample" resultType="java.lang.Integer" >
    select count(*) from stockOutBatch
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stockOutBatch
    <set >
      <if test="record.serialNum != null" >
        serialNum = #{record.serialNum,jdbcType=VARCHAR},
      </if>
      <if test="record.stockOutSerial != null" >
        stockOutSerial = #{record.stockOutSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.stockInSerial != null" >
        stockInSerial = #{record.stockInSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.stockOutMaterielSerial != null" >
        stockOutMaterielSerial = #{record.stockOutMaterielSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.stockInMaterielSerial != null" >
        stockInMaterielSerial = #{record.stockInMaterielSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.stockInBatchSerial != null" >
        stockInBatchSerial = #{record.stockInBatchSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.outCount != null" >
        outCount = #{record.outCount,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlg != null" >
        delFlg = #{record.delFlg,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stockOutBatch
    set serialNum = #{record.serialNum,jdbcType=VARCHAR},
      stockOutSerial = #{record.stockOutSerial,jdbcType=VARCHAR},
      stockInSerial = #{record.stockInSerial,jdbcType=VARCHAR},
      stockOutMaterielSerial = #{record.stockOutMaterielSerial,jdbcType=VARCHAR},
      stockInMaterielSerial = #{record.stockInMaterielSerial,jdbcType=VARCHAR},
      stockInBatchSerial = #{record.stockInBatchSerial,jdbcType=VARCHAR},
      outCount = #{record.outCount,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      delFlg = #{record.delFlg,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.congmai.zhgj.web.model.StockOutBatch" >
    update stockOutBatch
    <set >
      <if test="stockOutSerial != null" >
        stockOutSerial = #{stockOutSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockInSerial != null" >
        stockInSerial = #{stockInSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockOutMaterielSerial != null" >
        stockOutMaterielSerial = #{stockOutMaterielSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockInMaterielSerial != null" >
        stockInMaterielSerial = #{stockInMaterielSerial,jdbcType=VARCHAR},
      </if>
      <if test="stockInBatchSerial != null" >
        stockInBatchSerial = #{stockInBatchSerial,jdbcType=VARCHAR},
      </if>
      <if test="outCount != null" >
        outCount = #{outCount,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delFlg != null" >
        delFlg = #{delFlg,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.congmai.zhgj.web.model.StockOutBatch" >
    update stockOutBatch
    set stockOutSerial = #{stockOutSerial,jdbcType=VARCHAR},
      stockInSerial = #{stockInSerial,jdbcType=VARCHAR},
      stockOutMaterielSerial = #{stockOutMaterielSerial,jdbcType=VARCHAR},
      stockInMaterielSerial = #{stockInMaterielSerial,jdbcType=VARCHAR},
      stockInBatchSerial = #{stockInBatchSerial,jdbcType=VARCHAR},
      outCount = #{outCount,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      delFlg = #{delFlg,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </update>
  <select id="selectStockOutBatchBySerialNum"    parameterType="java.lang.String"  resultType="com.congmai.zhgj.web.model.StockOutBatch">
   select
    <include refid="Base_Column_List" />
    from stockOutBatch
    where  stockOutMaterielSerial=#{serialNum,jdbcType=VARCHAR} and delFlg=0
  </select>
    <select id="selectInOutNumsBySerialNum"    parameterType="java.lang.String"  resultType="java.lang.String"><!--selectSumBySerialNum  -->
   select
    group_concat(srd.inOutNum)
    from stockOutBatch
    left join   stockInOutRecord srd on srd.serialNum= stockOutBatch.stockInSerial
    where  stockOutMaterielSerial=#{serialNum,jdbcType=VARCHAR} and stockOutBatch.delFlg=0
  </select>
  <select id="selectSumBySerialNum"    parameterType="java.lang.String"  resultType="java.lang.String">
   <!-- select
   SUM(IFNULL(stockOutBatch.outCount,0)) as sumStockOutCount
    from stockOutBatch 
    left join   stockInOutRecord srd on srd.serialNum= stockOutBatch.stockInSerial
    where  stockInMaterielSerial=#{serialNum,jdbcType=VARCHAR} and stockOutBatch.delFlg=0 -->
    select
    SUM(IFNULL(outCount,0)) as sumStockOutCount
    from stockOutBatch
    where  stockInBatchSerial=#{serialNum,jdbcType=VARCHAR} and stockOutBatch.delFlg=0
  </select>
  <select id="selectStockInBatchBySerialNum"    parameterType="java.lang.String"  resultType="com.congmai.zhgj.web.model.StockInBatch">
   select
    <include refid="Base_Column_List_in" />
    from stockInBatch
    where  stockInMaterielSerial=#{serialNum,jdbcType=VARCHAR} and delFlg=0
  </select>
</mapper>