<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.congmai.zhgj.web.dao.StockInOutCheckMapper" >
  <resultMap id="BaseResultMap" type="com.congmai.zhgj.web.model.StockInOutCheck" >
    <id column="serialNum" property="serialNum" jdbcType="VARCHAR" />
    <result column="deliverSerial" property="deliverSerial" jdbcType="VARCHAR" />
    <result column="takeDeliverSerial" property="takeDeliverSerial" jdbcType="VARCHAR" />
    <result column="checkNum" property="checkNum" jdbcType="VARCHAR" />
    <result column="checkParty" property="checkParty" jdbcType="VARCHAR" />
    <result column="checkDate" property="checkDate" jdbcType="DATE" />
    <result column="checker" property="checker" jdbcType="VARCHAR" />
    <result column="contactNum" property="contactNum" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="delFlg" property="delFlg" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater" property="updater" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    serialNum, deliverSerial, takeDeliverSerial, checkNum, checkParty, checkDate, checker, 
    contactNum, status, remark, delFlg, creator, createTime, updater, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.congmai.zhgj.web.model.StockInOutCheckExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stockInOutCheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from stockInOutCheck
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from stockInOutCheck
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.congmai.zhgj.web.model.StockInOutCheckExample" >
    delete from stockInOutCheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.congmai.zhgj.web.model.StockInOutCheck" >
    insert into stockInOutCheck (serialNum, deliverSerial, takeDeliverSerial, 
      checkNum, checkParty, checkDate, 
      checker, contactNum, status, 
      remark, delFlg, creator, 
      createTime, updater, updateTime
      )
    values (#{serialNum,jdbcType=VARCHAR}, #{deliverSerial,jdbcType=VARCHAR}, #{takeDeliverSerial,jdbcType=VARCHAR}, 
      #{checkNum,jdbcType=VARCHAR}, #{checkParty,jdbcType=VARCHAR}, #{checkDate,jdbcType=DATE}, 
      #{checker,jdbcType=VARCHAR}, #{contactNum,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{delFlg,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.congmai.zhgj.web.model.StockInOutCheck" >
    insert into stockInOutCheck
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serialNum != null" >
        serialNum,
      </if>
      <if test="deliverSerial != null" >
        deliverSerial,
      </if>
      <if test="takeDeliverSerial != null" >
        takeDeliverSerial,
      </if>
      <if test="checkNum != null" >
        checkNum,
      </if>
      <if test="checkParty != null" >
        checkParty,
      </if>
      <if test="checkDate != null" >
        checkDate,
      </if>
      <if test="checker != null" >
        checker,
      </if>
      <if test="contactNum != null" >
        contactNum,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="delFlg != null" >
        delFlg,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serialNum != null" >
        #{serialNum,jdbcType=VARCHAR},
      </if>
      <if test="deliverSerial != null" >
        #{deliverSerial,jdbcType=VARCHAR},
      </if>
      <if test="takeDeliverSerial != null" >
        #{takeDeliverSerial,jdbcType=VARCHAR},
      </if>
      <if test="checkNum != null" >
        #{checkNum,jdbcType=VARCHAR},
      </if>
      <if test="checkParty != null" >
        #{checkParty,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        #{checkDate,jdbcType=DATE},
      </if>
      <if test="checker != null" >
        #{checker,jdbcType=VARCHAR},
      </if>
      <if test="contactNum != null" >
        #{contactNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delFlg != null" >
        #{delFlg,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.congmai.zhgj.web.model.StockInOutCheckExample" resultType="java.lang.Integer" >
    select count(*) from stockInOutCheck
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stockInOutCheck
    <set >
      <if test="record.serialNum != null" >
        serialNum = #{record.serialNum,jdbcType=VARCHAR},
      </if>
      <if test="record.deliverSerial != null" >
        deliverSerial = #{record.deliverSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.takeDeliverSerial != null" >
        takeDeliverSerial = #{record.takeDeliverSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.checkNum != null" >
        checkNum = #{record.checkNum,jdbcType=VARCHAR},
      </if>
      <if test="record.checkParty != null" >
        checkParty = #{record.checkParty,jdbcType=VARCHAR},
      </if>
      <if test="record.checkDate != null" >
        checkDate = #{record.checkDate,jdbcType=DATE},
      </if>
      <if test="record.checker != null" >
        checker = #{record.checker,jdbcType=VARCHAR},
      </if>
      <if test="record.contactNum != null" >
        contactNum = #{record.contactNum,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlg != null" >
        delFlg = #{record.delFlg,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stockInOutCheck
    set serialNum = #{record.serialNum,jdbcType=VARCHAR},
      deliverSerial = #{record.deliverSerial,jdbcType=VARCHAR},
      takeDeliverSerial = #{record.takeDeliverSerial,jdbcType=VARCHAR},
      checkNum = #{record.checkNum,jdbcType=VARCHAR},
      checkParty = #{record.checkParty,jdbcType=VARCHAR},
      checkDate = #{record.checkDate,jdbcType=DATE},
      checker = #{record.checker,jdbcType=VARCHAR},
      contactNum = #{record.contactNum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      delFlg = #{record.delFlg,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updater = #{record.updater,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.congmai.zhgj.web.model.StockInOutCheck" >
    update stockInOutCheck
    <set >
      <if test="deliverSerial != null" >
        deliverSerial = #{deliverSerial,jdbcType=VARCHAR},
      </if>
      <if test="takeDeliverSerial != null" >
        takeDeliverSerial = #{takeDeliverSerial,jdbcType=VARCHAR},
      </if>
      <if test="checkNum != null" >
        checkNum = #{checkNum,jdbcType=VARCHAR},
      </if>
      <if test="checkParty != null" >
        checkParty = #{checkParty,jdbcType=VARCHAR},
      </if>
      <if test="checkDate != null" >
        checkDate = #{checkDate,jdbcType=DATE},
      </if>
      <if test="checker != null" >
        checker = #{checker,jdbcType=VARCHAR},
      </if>
      <if test="contactNum != null" >
        contactNum = #{contactNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="delFlg != null" >
        delFlg = #{delFlg,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.congmai.zhgj.web.model.StockInOutCheck" >
    update stockInOutCheck
    set deliverSerial = #{deliverSerial,jdbcType=VARCHAR},
      takeDeliverSerial = #{takeDeliverSerial,jdbcType=VARCHAR},
      checkNum = #{checkNum,jdbcType=VARCHAR},
      checkParty = #{checkParty,jdbcType=VARCHAR},
      checkDate = #{checkDate,jdbcType=DATE},
      checker = #{checker,jdbcType=VARCHAR},
      contactNum = #{contactNum,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      delFlg = #{delFlg,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where serialNum = #{serialNum,jdbcType=VARCHAR}
  </update>
  <delete id="deleteStockInOutCheck" parameterType="java.util.List">
    	update  stockInOutCheck   set delFlg=1  where serialNum in
        <foreach item="idList" collection="list" open="(" close=")" separator=",">
            #{idList}
        </foreach>
    </delete>
    <update id="updateDeliverMateriel" parameterType="java.util.List" >
    update deliveryMateriel
    set qualifiedCount = #{idList.qualifiedCount,jdbcType=VARCHAR},
    unqualifiedCount = #{idList.unqualifiedCount,jdbcType=VARCHAR}
      checkRemark = #{idList.checkRemark,jdbcType=VARCHAR}
    where serialNum in 
     <foreach item="idList" collection="list" open="(" close=")" separator=",">
            #{idList.serialNum}
        </foreach>
  </update>
  <update  id="updateStockInOutCheckStatus" parameterType="java.lang.String">
    	update  stockInOutCheck   set status=1  where serialNum = #{serialNum,jdbcType=VARCHAR}
        
    </update>
</mapper>